{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","initialState","results","total_pages","total_results","Home","useState","state","setState","loading","setLoading","error","setError","API","movies","prev","useEffect","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07f49e71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from 'react';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n      <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom, rgba(0,0,0,0)\n        41%, rgba(0,0,0,0.65)\n        100%\n    ),\n    url(${({ image}) => image}), var(--darkGrey);\n    background-size: 100% cover;\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n    @keyframes animateHeroImage {\n        from {\n            opacity: 0;\n        }to{\n            opacity:1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n\n    h1{\n        font-size: var(--fontSuperBig);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontBig);\n        }\n    }\n\n    p {\n        font-size: var(--fontMed);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontSmall);\n        }\n    }\n\n    @media screen and (max-width: 720px){\n        max-width:100%;\n    }\n`;","import React from 'react';\n\n//styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({image, title, text}) => (\n    <Wrapper image={image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width:var(--maxwidth);\n    margin: 0 auto;\n    padding: 0 20px;\n\n    h1{\n        color: var(--medGrey);\n\n        @media screen and (max-width: 768px){\n            font-size: var(--fontBig);\n        }\n    }    \n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill,minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;\n","import React from 'react';\n\n//styles\nimport { Wrapper, Content } from './Grid.styles';\n\nconst Grid = ({header, children}) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n    </Wrapper>\n);\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n    width: 100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n\n    :hover{\n        opacity:0.8;\n    }\n    @keyframes animateThumb {\n        from{\n            opacity:0;\n        }to{\n            opacity:1;\n        }\n    }\n`;","import React from 'react';//react import\n//styles\nimport { Image } from './Thumb.styles';\n\nconst Thumb = ({image, movieId,clickable}) =>(\n    <div>\n        <Image src={image} alt=\"Movie Thumb\"/>\n    </div>\n);\n\n//export\nexport default Thumb;","import {useState, useEffect, userRef} from 'react';\n//API\nimport API from '../API';\n\n//Init status\nconst initialState = {\n    page:0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n};\n\nexport const useHomeFetch = () => {\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n  \n    const fetchMovies = async (page, searchTerm = '') => {\n      try {\n        setError(false);\n        setLoading(true);\n  \n        const movies = await API.fetchMovies(searchTerm, page);\n  \n        setState(prev => ({\n          ...movies,\n          results:\n            page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n        }));\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n  \n    // Initial render\n    useEffect(() => {\n      fetchMovies(1);\n    }, []);\n\n    return {state, loading, error};\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, { useState, useEffect } from 'react';\n// API\nimport API from '../API';\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n// Components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n    const { state, loading, error} = useHomeFetch();\n\n    console.log(state);\n    return (\n        <>\n            {state.results[0] ?\n                <HeroImage \n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                    title={state.results[0].original_title}\n                    text={state.results[0].overview}\n                />\n                :null}\n                <Grid header='Popular Movies'>\n                    {state.results.map(movie => (\n                        //<div key={movie.id}>{movie.title}</div>\n                        <Thumb\n                            key={movie.id}\n                            clickable\n                            image={\n                                movie.poster_path \n                                 ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                                 : NoImage\n                            }\n                            movieId={movie.id}\n                        />\n                    ))}\n                </Grid>\n        </>\n    );\n};\n\nexport default Home;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    \n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Home />\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}